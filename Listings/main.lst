C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE user\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver\inc;.\device\inc) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #include "ds18b20.h"
   3          #include "smg.h"
   4          #include "pcf8591.h"
   5          #include "hc573.h"
   6          #include "key.h"
   7          #include "led.h"
   8          #include "relay.h"
   9          #include "timer.h"
  10          #include "delay.h"
  11          #include "utralsound.h"
  12          #include "intrins.h"
  13          
  14          unsigned char smgpos_index = 0;
  15          unsigned int sys_ticks = 0;
  16          
  17          unsigned char show_mode = 0;   /*0 env_state 1 sport_state 2 temprg_state  3 nc_state  10 距离参数*/
  18          unsigned char light_drgree = 1; /**光照等级 */
  19          bit distance_state_show_mode = 0;
  20          
  21          float tempture = 0.0;
  22          unsigned int distance = 0;    /**两次距离之差 */
  23          unsigned int distance_pre = 0;
  24          unsigned int distance_now = 0;
  25          
  26          
  27          unsigned char distance_prg = 30;
  28          unsigned char temp_prg = 20;
  29          unsigned int realy_count = 0; /**继电器吸合次数 */
  30          
  31          /**上电2s距离锁定变量 */
  32          bit distancelock = 0;
  33          unsigned int time2s = 0;
  34          
  35          /**双按键2s变量 */
  36          bit scan_flag = 0;
  37          unsigned int times2000 = 0;
  38          
  39          /**运动模式锁定变量 */
  40          bit sport_statelock = 0;  /**0 未锁定  1 锁定 */
  41          unsigned int time3s = 0;
  42          bit near_flag = 0;  /**接近标志位 0不接近 1接近 */
  43          unsigned char sport_state = 1;   /**当前运动模式 */
  44          unsigned char sport_state_pre = 0;  /**上次运动模式 */
  45          
  46          /**状态控制数组，下标表示对应的位置，如下标为0表示对应的0号数码管 ,默认均
             -为关闭状态*/
  47          /** 不要char Led_Buf[8]={1}直接初始化整个数组为1，测试发现不行 应该是C51不支持？
             -存疑中*/
  48          unsigned char Led_Buf[8] = {0, 0, 0,0,0,0,0,0};
  49          unsigned char Smg_Buf[8] = {20, 20, 20, 20,20, 20, 20, 20};   /**OFF */
  50          unsigned char Smg_Point[8] = {0, 0, 0,0,0,0,0,0};
  51          
  52          
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 2   

  53          
  54          void show_process(void);
  55          void data_process(void);
  56          void key_process(void);
  57          void ledrelay_process(void);
  58          void utralsound_process(void);
  59          
  60          void Sys_Init(void)
  61          {
  62   1          P0 = 0xff;
  63   1          SelectHC573(CS_LED);
  64   1          P2 &= 0x1F;  //关闭LED
  65   1          
  66   1          P0 = 0x00;   //关蜂鸣器，继电器 步进电机
  67   1          SelectHC573(CS_ULN2003);
  68   1           P2 &= 0x1F;
  69   1          
  70   1      }
  71          
  72          
  73          int main()
  74          {
  75   1          bit first_read = 1;
  76   1          Timer1_Init();
  77   1          Sys_Init();
  78   1      
  79   1          tempture = read_tempture(first_read);
  80   1          first_read = 0;
  81   1          
  82   1          while(1) {
  83   2              utralsound_process();
  84   2              data_process();
  85   2              show_process();
  86   2              ledrelay_process();
  87   2              key_process();
  88   2          }
  89   1      }
  90          
  91          void utralsound_process(void)
  92          {
  93   1          if (distancelock == 0) return;   //上电2s不采集数据
  94   1      
  95   1          if (sys_ticks == 0)  { /**systick的周期是1000ms，保证1s采集一次 */
  96   2              distance_now = us_data();
  97   2              near_flag = (distance_now < distance_prg);   //接近判断
  98   2              if (sport_statelock == 0) {  //未锁定
  99   3                  distance = distance_now - distance_pre;
 100   3                  distance_pre = distance_now;
 101   3      
 102   3                  if (distance < 5) {
 103   4                      sport_state = 1;  //静止
 104   4                  }else if (distance < 10){
 105   4                      sport_state = 2;  //L2 徘徊
 106   4                  }else {
 107   4                      sport_state = 3;  //L3 跑动
 108   4                  }
 109   3      
 110   3                  if (sport_state_pre != sport_state) {   //运动状态发生变化
 111   4                      sport_statelock = 1;
 112   4                  }
 113   3                  sport_state_pre = sport_state;
 114   3              }
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 3   

 115   2          }
 116   1      }
 117          
 118          
 119          void show_process(void)
 120          {
 121   1          switch(show_mode) {
 122   2              case 0:  /**0 env_state */
 123   2                  Smg_Buf[0] = 12;  /*c*/
 124   2                  Smg_Buf[1] = ((int)tempture) /10;
 125   2                  Smg_Buf[2] = ((int)tempture) %10;
 126   2                  Smg_Buf[3] = 20;
 127   2                  Smg_Buf[4] = 20;
 128   2                  Smg_Buf[5] = 20;
 129   2                  Smg_Buf[6] = 18;  /*n*/  
 130   2                  Smg_Buf[7] = light_drgree;
 131   2              break;
 132   2      
 133   2              case 1:  /* 运动检测状态  显示超声波测量的距离 单位 cm*/
 134   2                  Smg_Buf[0] = 16;  /**L */
 135   2                  Smg_Buf[1] = sport_state;
 136   2                  Smg_Buf[2] = 20;
 137   2                  Smg_Buf[3] = 20;
 138   2                  Smg_Buf[4] = 20;
 139   2                  Smg_Buf[5] = distance_now / 100;
 140   2                  Smg_Buf[6] = distance_now / 10 % 10;
 141   2                  Smg_Buf[7] = distance_now % 10;
 142   2              break;
 143   2      
 144   2              case 2:  /**温度参数界面 */
 145   2                  Smg_Buf[0] = 17;  /**P */
 146   2                  Smg_Buf[1] = 12;  /**C */
 147   2                  Smg_Buf[2] = 20;
 148   2                  Smg_Buf[3] = 20;
 149   2                  Smg_Buf[4] = 20;
 150   2                  Smg_Buf[5] = 20;
 151   2                  Smg_Buf[6] = temp_prg / 10;
 152   2                  Smg_Buf[7] = temp_prg % 10;
 153   2              break;
 154   2      
 155   2      
 156   2              case 3: /**数据统计状态 */
 157   2                  Smg_Buf[0] = 18; /**n */
 158   2                  Smg_Buf[1] = 12; /**c */
 159   2                  Smg_Buf[2] = 20;
 160   2                  Smg_Buf[3] = 20;
 161   2                  Smg_Buf[4] = (((realy_count / 1000) == 0) ? 20 : (realy_count / 1000));
 162   2                  if (Smg_Buf[4] != 20) {  /**最高位不为0 但第二位为0 例如10xx这种 */
 163   3                      Smg_Buf[5] = (((realy_count % 1000 / 100) == 0) ? 0 : (realy_count % 1000 / 100));
 164   3                  }else {
 165   3                      Smg_Buf[5] = (((realy_count % 1000 / 100) == 0) ? 20 : (realy_count % 1000 / 100));
 166   3                  }
 167   2      
 168   2                  if (Smg_Buf[5] != 20) {  /**20x这种情况 */
 169   3                      Smg_Buf[6] = (((realy_count % 100 / 10) == 0) ? 0 : (realy_count % 100 / 10));
 170   3                  }else {
 171   3                      Smg_Buf[6] = (((realy_count % 100 / 10) == 0) ? 20 : (realy_count % 100 / 10));
 172   3                  }
 173   2                 
 174   2                  if (Smg_Buf[6] != 20) {  
 175   3                      Smg_Buf[7] = (((realy_count % 10 ) == 0) ? 0 : (realy_count % 10 ));
 176   3                  }else {
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 4   

 177   3                      Smg_Buf[7] = (((realy_count % 10) == 0) ? 20 : (realy_count % 10 ));
 178   3                  }
 179   2              break;
 180   2      
 181   2              case 10:
 182   2                  Smg_Buf[0] = 17;  /**P */
 183   2                  Smg_Buf[1] = 16;  /**L */
 184   2                  Smg_Buf[2] = 20;
 185   2                  Smg_Buf[3] = 20;
 186   2                  Smg_Buf[4] = 20;
 187   2                  Smg_Buf[5] = 20;
 188   2                  Smg_Buf[6] = distance_prg / 10;
 189   2                  Smg_Buf[7] = distance_prg % 10;
 190   2              break;
 191   2          }
 192   1      }
 193          
 194          
 195          void data_process(void)
 196          {
 197   1          unsigned char vol_temp;
 198   1      
 199   1          if (sys_ticks % 200 != 0) {
 200   2              return;
 201   2          }
 202   1      
 203   1          #if 0
                  if (sys_ticks % 100 == 0) {   /**1s内采10次超声波 */
                          distance = us_data();
                          vol_temp = PCF8591_Read(PCF8591_CH1);  /**读光敏电阻 51份为1v*/
                      }
                      if (sys_ticks % 500 == 0) {
                          tempture = read_tempture(0);
                  }
                  #endif
 212   1      
 213   1          //distance = us_data();
 214   1          vol_temp = 255 - PCF8591_Read(PCF8591_CH1);  /**读光敏电阻 51份为1v*/
 215   1          tempture = read_tempture(0);
 216   1          if (vol_temp  >= 3*51) {
 217   2              light_drgree = 1;
 218   2          } else if (vol_temp >= 2*51 && vol_temp < 3*51) {
 219   2              light_drgree = 2;
 220   2          }else if (vol_temp >= 25 && vol_temp < 2*51){
 221   2              light_drgree = 3;
 222   2          }else {
 223   2              light_drgree = 4;
 224   2          }
 225   1      
 226   1      }
 227          
 228          void key_process(void)
 229          {
 230   1          static unsigned char Key_Val, Key_Down, Key_Up, Key_Old;
 231   1          if(sys_ticks % 50) {  
 232   2              return; 
 233   2          }
 234   1          
 235   1          //Key_Val = Key_Matrix_Scan(0);
 236   1          Key_Val = Key_Matrix_Scan();
 237   1      
 238   1          /**官方提供的消抖代码 */
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 5   

 239   1          Key_Down = Key_Val & (Key_Old ^ Key_Val);
 240   1              Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
 241   1              Key_Old = Key_Val;
 242   1      
 243   1          if (Key_Down == KEY_S4) { 
 244   2              if( 10 == show_mode) show_mode = 3; 
 245   2              else {
 246   3                  show_mode++;
 247   3                  if (4 == show_mode) show_mode = 0;
 248   3              }
 249   2          }
 250   1      
 251   1          if (Key_Down == KEY_S5 ) {  /**进入参数子界面 */
 252   2              if (show_mode == 2) {
 253   3                  show_mode = 10; /**进入距离参数界面 */
 254   3                  return;
 255   3              }
 256   2              if (show_mode == 10) {
 257   3                  show_mode = 2; /**进入温度参数界面 */
 258   3              }
 259   2          }
 260   1      
 261   1      
 262   1          if (Key_Down == KEY_S8) {  //+
 263   2              if(show_mode == 2) {  //温度参数模式
 264   3                  temp_prg = (temp_prg == 80) ? 80 : (temp_prg + 1); 
 265   3              }else if (show_mode == 10) { //距离参数模式
 266   3                  distance_prg = (distance_prg == 80) ? 80 : (distance_prg + 5);
 267   3              }
 268   2          }
 269   1      
 270   1          if (Key_Down == KEY_S9) {  //-
 271   2              if(show_mode == 2) {  //温度参数模式
 272   3                  temp_prg = (temp_prg == 20) ? 20 : (temp_prg - 1); 
 273   3              }else if (show_mode == 10) { //距离参数模式
 274   3                  distance_prg = (distance_prg == 20) ? 20 : (distance_prg - 5);
 275   3              }
 276   2          }
 277   1      
 278   1          if (Key_Down == 89 && show_mode == 3) {
 279   2                      scan_flag = 1;
 280   2          }
 281   1          if (times2000 == 2001) {
 282   2              realy_count = 0;
 283   2              scan_flag = 0;
 284   2              times2000 = 0;
 285   2          }
 286   1          if(Key_Up == 89 ) {
 287   2              scan_flag = 0;
 288   2              times2000 = 0;
 289   2          }
 290   1          
 291   1      }
 292          
 293          /**
 294           * @brief 根据显示模式处理 LED 和继电器的状态
 295           *
 296           * 该函数根据全局变量 show_mode 的值，对不同的显示模式进行不同的 LED 和继电器
             -控制操作。
 297           */
 298          void ledrelay_process(void)
 299          {
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 6   

 300   1          static bit relay_flag = 1; /**继电器吸合标志位 */
 301   1          if (near_flag) {  
 302   2              switch(light_drgree) {  //接近才判断
 303   3                  case 1:
 304   3                      Led_Buf[0] = LED_ON;
 305   3                      Led_Buf[1] = LED_OFF;
 306   3                      Led_Buf[2] = LED_OFF;
 307   3                      Led_Buf[3] = LED_OFF;
 308   3                  break;
 309   3      
 310   3                  case 2:
 311   3                      Led_Buf[0] = LED_ON;
 312   3                      Led_Buf[1] = LED_ON;
 313   3                      Led_Buf[2] = LED_OFF;
 314   3                      Led_Buf[3] = LED_OFF;
 315   3                  break;
 316   3      
 317   3                  case 3:
 318   3                      Led_Buf[0] = LED_ON;
 319   3                      Led_Buf[1] = LED_ON;
 320   3                      Led_Buf[2] = LED_ON;
 321   3                      Led_Buf[3] = LED_OFF;
 322   3                  break;
 323   3      
 324   3                  case 4:
 325   3                      Led_Buf[0] = LED_ON;
 326   3                      Led_Buf[1] = LED_ON;
 327   3                      Led_Buf[2] = LED_ON;
 328   3                      Led_Buf[3] = LED_ON; 
 329   3                  break;
 330   3              }
 331   2          }else {
 332   2              Led_Buf[0] = Led_Buf[1] = Led_Buf[2]= Led_Buf[3] = 0;
 333   2          }
 334   1      
 335   1          if (sport_state == 1) {
 336   2              Led_Buf[7] = LED_OFF;
 337   2          }else if (sport_state == 2){
 338   2              Led_Buf[7] = LED_ON;
 339   2          }else {
 340   2              if (sys_ticks % 100 == 0) {
 341   3                  Led_Buf[7] = !Led_Buf[7];
 342   3              }
 343   2          }
 344   1          
 345   1          /**继电器状态判定 */ 
 346   1          if ((near_flag) && tempture > temp_prg) {
 347   2              relay_ctrl(1);
 348   2              if (1 == relay_flag) {/**如果继电器本来已经吸合了，不用再加次数 */
 349   3                  realy_count++;
 350   3                  relay_flag = 0;
 351   3              }
 352   2          }else {
 353   2              relay_ctrl(0);
 354   2              relay_flag = 1;
 355   2          }
 356   1      }
 357          
 358          
 359          /**
 360           * @brief 定时器1中断服务函数
 361           *
C51 COMPILER V9.59.0.0   MAIN                                                              05/03/2025 11:33:25 PAGE 7   

 362           * 该函数在定时器1产生中断时被调用，用于处理系统的定时任务，
 363           * 包括更新系统时钟滴答、数码管显示、LED显示和继电器控制等。
 364           *
 365           * @param 无
 366           * @return 无
 367           */
 368          void Timer1_Handler(void) interrupt 3
 369          {
 370   1          sys_ticks=(++sys_ticks) % 1000;
 371   1      
 372   1          if (scan_flag) {    //双键被按下
 373   2              if(++times2000 >= 2000)
 374   2                  times2000 = 2001;
 375   2          }
 376   1      
 377   1          if (distancelock == 0) {  //上电锁定2s
 378   2              if(++time2s == 2000) {
 379   3                  time2s = 0;
 380   3                  distancelock = 1;
 381   3              }
 382   2          }
 383   1      
 384   1          if (sport_statelock) { //运动模式3s锁定
 385   2              if ((++time3s)  == 3000) {
 386   3                  time3s = 0;
 387   3                  sport_statelock = 0;
 388   3              }
 389   2          }
 390   1          smgpos_index = (++smgpos_index) % 8;
 391   1          smg_display(smgpos_index, Smg_Buf[smgpos_index], Smg_Point[smgpos_index]);
 392   1          led_display(smgpos_index, Led_Buf[smgpos_index]);
 393   1      
 394   1      
 395   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1366    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
